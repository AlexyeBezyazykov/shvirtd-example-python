version: '3.8'
services:

  web:
    build:
      context: ./                   # путь до докерфайла
      dockerfile: Dockerfile        # имя докерфайла
    container_name: web             # имя контейнера
    ports:                          # проброс портов
      - '5000:5000'                 # номер порта
    networks:
      backend:
        ipv4_address: 172.20.0.5
    restart: always
    environment:
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    env_file:
      - .env

  db:
    image: mysql:8
    container_name: db # имя контейнера
    networks:
      backend:
        ipv4_address: 172.20.0.10
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    env_file:
      - .env

  reverse-proxy:
    image: haproxy
    container_name: reverse-proxy
    restart: always
    ports:
    - '127.0.0.1:8080:8080'
    volumes:
    - ./haproxy/reverse/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw
    networks:
      backend:
        ipv4_address: 172.20.0.11

  ingress-proxy:
    image: nginx:latest
    container_name: ingress-proxy
    restart: always
    volumes:
    - ./nginx/ingress/default.conf:/etc/nginx/conf.d/default.conf:rw
    - ./nginx/ingress/nginx.conf:/etc/nginx/nginx.conf:rw
    network_mode: host

networks:            # создание сети
  backend:           # название сети контейнеров
    driver: bridge   # тип драйвера сети
    ipam:            # описание параметров сети
      config:
        - subnet: 172.20.0.0/24 # подсеть
          gateway: 172.20.0.1   # шлюз

volumes:
  mysql_data: {}
