version: '3.8'
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.5
    environment:
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PORT: 3306
    ports:
      - 8000:8000
    volumes:
      - .:/app
    container_name: web


  db:
    image: mysql:8
    restart: always
    networks:
      backend:
        ipv4_address: 172.20.0.10
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - ./mysql/my.conf:/etc/mysql/my.cnf:ro
      - mysql_data:/var/lib/mysql
    container_name: db

  reverse-proxy:
    image: haproxy
    container_name: reverse-proxy
    restart: always
    ports:
    - '127.0.0.1:8080:8080'
    volumes:
    - ./haproxy/reverse/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw
    networks:
      backend:
        ipv4_address: 172.20.0.11

  ingress-proxy:
    image: nginx:latest
    container_name: ingress-proxy
    restart: always
    volumes:
    - ./nginx/ingress/default.conf:/etc/nginx/conf.d/default.conf:rw
    - ./nginx/ingress/nginx.conf:/etc/nginx/nginx.conf:rw
    network_mode: host

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1

volumes:
  mysql_data: {}
